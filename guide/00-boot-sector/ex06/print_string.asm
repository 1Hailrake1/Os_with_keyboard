; ===================== BOOT SECTOR / ex06 / print_string ======================
; Функция вывода строки на экран (скопировано из ex05)
; ------------------------------------------------------------------------------
; Чтобы перевести наш файл boot_sect.asm в машинный код, нужно написать:
; nasm boot_sect.asm -f bin -o boot_sect.bin
; ------------------------------------------------------------------------------
; Справочник по синтаксису ассемблера NASM можно найти тут: 
; https://www.opennet.ru/docs/RUS/nasm/nasm_ru3.html


print_string:			; Функция вывода строки на экран
	pusha				; Когда мы используем функции, мы можем модифицировать
						; регистры прямо в них, что нарушает чистоту функции,
						; т.е. мы можем перезаписывать какие-то внешние
						; данные. Для этого мы добавляем значение всех регистров
						; в стек с помощью команды pusha, а в конце функции
						; мы возвращаем регистрам их изначальные значения,
						; которые возьмем из стека (команда popa).
	mov ah, 0x0e		; tele-type mode
	loop:				; Метка loop (= цикл)
		mov al, [bx]	; Перемещаем значение bx в al, т.к. мы помним что в bx
						; лежит первый символ строки (см. ex05/main.asm)
		cmp al, 0		; Команда cmp для сравнения al и 0.
		je return		; (if) je = "jump if equal",
						; т.е. перемещаемся к коду с меткой return если al == 0
		jmp put_char	; (else) в противном случае перемещаемся к put_char.
	put_char:			; Метка put_char - вывод символа на экран.
		int 0x10		; Вызываем прерывание, которое позволяет вывести 
						; на экран значение регистра al, в котором лежит [bx].
		inc bx			; inc <регистр> - увеличить на 1.
		jmp loop		; Возвращаемся обратно к циклу.
	return:				; Метка return - завершаем функцию
		popa			; Возвращаем регистрам их изначальные значения.
		ret				; Заканчиваем выполнение функции.