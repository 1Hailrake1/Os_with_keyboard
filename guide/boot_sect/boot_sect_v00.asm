; =========================== BOOT SECTOR GUIDE V00 ============================
; Простая программа загрузочного сектора (boot sector), которая запускает
; бесконечный цикл.
; ------------------------------------------------------------------------------
; Чтобы дать понять BIOS, что на текущей флэшке, компакт диске или жестком диске
; расположена ОС, на этом носителе должен быть загрузочный сектор. BIOS узнает
; загрузочный сектор по "магическому числу" из 2-х байт, равное 0xaa55 
; (в шестнадцатеричной системе исчисления). Простейший загрузочный сектор в 
; машинном коде выглядит так:
;  e9 fd ff 00 00 00 00 00 00 00 00 00 00 00 00 00
;  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
; *
;  00 00 00 00 00 00 00 00 00 00 00 00 00 00 55 aa
; Как видим, последние 2 байта действительно являются "магическим числом".
; Первые 3 байта запускают бесконечный цикл, а остальное просто заполнено нулями
; т.к. наша программа должна быть размером ровно 512 байт.
; ------------------------------------------------------------------------------
; Чтобы перевести наш файл boot_sect.asm в машинный код, нужно написать:
; nasm boot_sect.asm -f bin -o boot_sect.bin
; Попробуйте запустить boot_sect.bin с помощью эмулятора (например, qemu), и вы 
; увидите "Booting from Hard Disk...", хотя если вы измените "магическое число",
; соберете файл boot_sect.bin заново и запустите с помощью эмулятора,
; то BIOS попытается загрузить ОС, но в итоге напишет "No bootable device".
; А значит, у нас получилось создать загрузочный сектор!
; ------------------------------------------------------------------------------
; Справочник по синтаксису ассемблера NASM можно найти тут: 
; https://www.opennet.ru/docs/RUS/nasm/nasm_ru3.html

loop:					; Определяем метку "loop", с помощью которой мы сделаем
						; бесконечный цикл

	jmp loop			; инструкция "jmp" позволяет нам перейти к метке 
						; "loop" (англ. jump - перепрыгнуть), т.е. создается
						; бесконечный цикл.

times 510-($-$$) db 0	; инструкция "times" заставляет идущую после нее 
						; команду выполняться несколько раз, таким образом мы 
						; заполняем пространство нулями (db 0), приводя нас к
						; 510-му байту.
						; db расшифровывается как "declare bytes", т.е.
						; "объявить байты"

dw 0xaa55				; В последние два байта кладем "магическое число",
						; чтобы BIOS знал, что это загрузочный сектор