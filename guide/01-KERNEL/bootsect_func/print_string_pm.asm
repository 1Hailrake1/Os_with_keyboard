; ------------------------------------------------------------------------------
; Guide:	00-BOOT-SECTOR
; File:		ex08 / print_string_pm.asm
; Title:	Функция вывода строки на экран в 32-битном защищенном режиме
; ------------------------------------------------------------------------------
; Description:
;	Плюсы 32-битного режима: возможность использовать 32-битные регистры и
;	адрессацию памяти, защищенную память виртуальную память
;	Минусы: отсутствие БИОС прерываний, требование наличия GDT (об этом позже)
;	В этой программе мы напишем новую функцию печати строки, но без прерываний
;	БИОСа, а напрямую манипулируя VGA видеопамятью, вместо вызова int 0x10.
;	VGA память размещена начиная с адреса 0xb8000, и у VGA имеется специальный
;	текстовый режим, поэтому нам не придется напрямую рисовать пиксели.
; ------------------------------------------------------------------------------


[bits 32]					; Используем 32-битный режим

							; Определяем некоторые константы
VIDEO_MEMORY equ 0xb8000	; = адрес начала памяти VGA
WHITE_ON_BLACK equ 0x0f		; = цвет символов (0x0f - белый)

print_string_pm:
	pusha
	mov edx, VIDEO_MEMORY	; Перемещаем в edx адрес начала массива видеопамяти

print_string_pm_loop:
	mov al, [ebx]			; Сохраняем символ из ebx в al
	mov ah, WHITE_ON_BLACK	; Устанавливаем цвет символов
							; TODO !!! sequence of 2 bytes in char reprr

	cmp al, 0				; if (al == 0), т.е. если конец массива, то
	je print_string_pm_done	; заканчиваем выполнение функции
							; else:
	mov [edx], ax			; video_memory[edx] = ax
	add ebx, 1				; переходим к следующему символу
	add edx, 2				; переходим к следующему адресу в VGA	TODO same

	jmp print_string_pm_loop

print_string_pm_done:
	popa
	ret
